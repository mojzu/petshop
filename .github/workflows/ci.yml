name: CI

on:
  push:
    branches:
      - main

    tags:
      - v*

  pull_request:
    branches:
      - main

env:
  CLICOLOR_FORCE: 1

jobs:
  rust-ci:
    name: Rust CI
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Add `, beta, nightly` to array for more tests
        rust: [ stable ]
        os: [ ubuntu-latest, windows-latest, macOS-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Install cargo-make
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug cargo-make

      - name: Run CI
        if: matrix.rust != 'nightly'
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: ci-flow

      - name: Run CI (Allow Failures)
        if: matrix.rust == 'nightly'
        continue-on-error: true
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: ci-flow

  docker-ci:
    name: Docker CI
    needs: rust-ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install cargo-make
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug cargo-make

      - name: Run CI
        run: |
          cargo make compose-ci run sut
          cargo make compose-ci-down

      - name: Build Images
        if: github.event_name == 'push'
        run: |
          cargo make dist-ci-build
          docker image inspect petshop/envoy:latest
          docker image inspect petshop/server:latest
          echo "TODO: Tag/push images here (petshop/envoy:latest, petshop/server:latest)"
