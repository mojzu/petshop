# TODO: Disabled by .helmignore until working
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: {{ include "petshop.fullname" . }}-gateway
  labels:
    {{- include "petshop.labels" . | nindent 4 }}
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ include "petshop.fullname" . }}-virtualservice
  labels:
    {{- include "petshop.labels" . | nindent 4 }}
spec:
  hosts:
  - "*"
  gateways:
  - {{ include "petshop.fullname" . }}-gateway
  http:
  - route:
    - destination:
        port:
          number: {{ .Values.service.internal_port }}
        host: {{ include "petshop.fullname" . }}
# ---
# # TODO: Supporting multiple istio versions here?
# # <https://github.com/istio/istio/issues/7652>
# apiVersion: networking.istio.io/v1alpha3
# kind: EnvoyFilter
# metadata:
#   name: {{ include "petshop.fullname" . }}-envoyfilter
#   labels:
#     {{- include "petshop.labels" . | nindent 4 }}
# spec:
#   workloadSelector:
#     labels:
#       app: {{ include "petshop.fullname" . }}
#   configPatches:
#     - applyTo: HTTP_FILTER
#       match:
#         context: SIDECAR_INBOUND
#         listener:
#           filterChain:
#             filter:
#               name: envoy.http_connection_manager
#               subFilter:
#                 name: envoy.router
#           portNumber: {{ .Values.service.api_port }}
#       patch:
#         operation: INSERT_BEFORE
#         value:
#           name: envoy.grpc_json_transcoder
#           config:
#             proto_descriptor_bin: {{ .Files.Get "api.pb" | b64enc }}
#             services:
#               - api.Petshop
#             print_options:
#               add_whitespace: true
#               always_print_primitive_fields: true
#               always_print_enums_as_ints: false
#               preserve_proto_field_names: false

# MicroK8s + istio notes, superseded by minikube but may be useful for this
# sudo snap install microk8s --classic --channel=1.20/stable
# sudo snap refresh microk8s --channel=1.20/stable
# sudo snap remove microk8s

# microk8s start
# microk8s status --wait-ready
# microk8s enable dashboard dns storage istio helm3
# microk8s stop

# alias kubectl='microk8s kubectl'
# alias istioctl='microk8s istioctl'
# alias helm3='microk8s helm3'

# # Enable istio injection
# kubectl label namespace default istio-injection=enabled --overwrite
# kubectl get namespace -L istio-injection

# # Open services in browser
# kubectl get all --all-namespaces
# # Find cluster IP for service/kubernetes-dashboard
# # Open https://$CLUSTER_IP
# token=$(kubectl -n kube-system get secret | grep default-token | cut -d " " -f1)
# kubectl -n kube-system describe secret $token
# # Find cluster IP for service/kiali
# # Open http://$CLUSTER_IP:20001
# # Find cluster IP for service/prometheus
# # Open http://$CLUSTER_IP:9090
# # Find cluster IP for service/tracing
# # Open http://$CLUSTER_IP:80

# # Istio
# istioctl proxy-status [$NAME]
# istioctl proxy-config cluster -n istio-system istio-ingressgateway-56bb766b96-b95rg
# istioctl proxy-config listeners petshop-75f94d5556-zmvp6.default --port 5000 -o json

# # TODO: Prometheus integration
# # <https://github.com/prometheus-community/helm-charts/tree/main/charts/prometheus>
