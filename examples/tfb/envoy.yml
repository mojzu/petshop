# TODO: Check this, where applicable copy back to other example files
# Used the following example to try and improve performance here
# <https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge>
# overload_manager:
#   refresh_interval: 0.25s
#   resource_monitors:
#     - name: "envoy.resource_monitors.fixed_heap"
#       typed_config:
#         "@type": type.googleapis.com/envoy.extensions.resource_monitors.fixed_heap.v3.FixedHeapConfig
#         max_heap_size_bytes: 2147483648 # 2 GiB
#     actions:
#     - name: "envoy.overload_actions.shrink_heap"
#       triggers:
#       - name: "envoy.resource_monitors.fixed_heap"
#         threshold:
#           value: 0.95
#     - name: "envoy.overload_actions.stop_accepting_requests"
#       triggers:
#       - name: "envoy.resource_monitors.fixed_heap"
#         threshold:
#           value: 0.98

static_resources:
  listeners:
    - name: listener1
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      per_connection_buffer_limit_bytes: 32768 # 32 KiB
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: grpc_json
                http2_protocol_options:
                  max_concurrent_streams: 100
                  initial_stream_window_size: 65536 # 64 KiB
                  initial_connection_window_size: 1048576 # 1 MiB
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: upstream
                      domains: [ "*" ]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: upstream-service
                            timeout: { seconds: 60 }
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: POST, OPTIONS
                        allow_headers: authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        expose_headers: grpc-status,grpc-message
                        allow_credentials: true
                http_filters:
                  - name: envoy.filters.http.cors
                  - name: envoy.filters.http.grpc_web
                  - name: envoy.filters.http.grpc_json_transcoder
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                      proto_descriptor: "/config/api.pb"
                      services: [ "grpc.health.v1.Health", "api.v1.Petshop" ]
                      match_incoming_request_route: true
                      print_options:
                        add_whitespace: true
                        always_print_primitive_fields: true
                        always_print_enums_as_ints: false
                        preserve_proto_field_names: false
                  - name: envoy.filters.http.router

  clusters:
    - name: upstream-service
      connect_timeout: 1s
      per_connection_buffer_limit_bytes: 32768 # 32 KiB
      type: logical_dns
      lb_policy: round_robin
      dns_lookup_family: V4_ONLY
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options:
              initial_stream_window_size: 65536 # 64 KiB
              initial_connection_window_size: 1048576 # 1 MiB
      load_assignment:
        cluster_name: upstream-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: server
                      port_value: 5000

layered_runtime:
  layers:
    - name: static_layer_0
      static_layer:
        envoy:
          resource_limits:
            listener:
              example_listener_name:
                connection_limit: 10000
        overload:
          global_downstream_max_connections: 50000
