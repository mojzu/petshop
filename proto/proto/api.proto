syntax = "proto3";
package api.v1;

option go_package = "petshop/petshop";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/httpbody.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Petshop API";
    version: "v1";
  };
};

service Petshop {
  // HTTP body example
  rpc HttpBodyEx (google.protobuf.Empty) returns (google.api.HttpBody) {
    option (google.api.http) = {
      post: "/api.v1.Petshop/HttpBodyEx"
      body: "*"
    };
  }

  // Schemaless JSON example
  rpc JsonEx (google.protobuf.Struct) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/api.v1.Petshop/JsonEx"
      body: "*"
    };
  }

  // Authentication required example
  rpc AuthenticationRequiredEx (google.protobuf.Empty) returns (User) {
    option (google.api.http) = {
      post: "/api.v1.Petshop/AuthenticationRequiredEx"
      body: "*"
    };
  }

  // Validation example
  rpc ValidationEx (User) returns (User) {
    option (google.api.http) = {
      post: "/api.v1.Petshop/ValidationEx"
      body: "*"
    };
  }

  // Server streaming example
  //
  // Bidirectional streaming is not supported in grpc-web
  rpc StreamingEx (Echo) returns (stream Echo) {
    option (google.api.http) = {
      post: "/api.v1.Petshop/StreamingEx"
      body: "*"
    };
  }

  // TFB json_url
  rpc TfbJson (google.protobuf.Empty) returns (Echo) {
    option (google.api.http) = {
      get: "/json"
    };
  }

  // TFB plaintext_url
  rpc TfbPlaintext (google.protobuf.Empty) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get: "/plaintext"
    };
  }

  // TFB db_url
  rpc TfbDb (google.protobuf.Empty) returns (World) {
    option (google.api.http) = {
      get: "/db"
    };
  }

  // TFB queries_url
  rpc TfbQueries1 (Queries) returns (google.protobuf.ListValue) {
    option (google.api.http) = {
      get: "/queries/{queries}"
    };
  }
  rpc TfbQueries2 (Queries) returns (google.protobuf.ListValue) {
    option (google.api.http) = {
      get: "/queries"
    };
  }

  rpc PetPost (Pet) returns (Pet) {
    option (google.api.http) = {
      post: "/api.v1.Petshop/PetPost"
      body: "*"
    };
  }

  rpc PetPut (Pet) returns (Pet) {
    option (google.api.http) = {
      post: "/api.v1.Petshop/PetPut"
      body: "*"
    };
  };

  rpc PetFindByStatus (FindByStatus) returns (Pets) {
    option (google.api.http) = {
      post: "/api.v1.Petshop/PetFindByStatus"
      body: "*"
    };
  }

  rpc PetFindByTag (FindByTag) returns (Pets) {
    option (google.api.http) = {
      post: "/api.v1.Petshop/PetFindByTag"
      body: "*"
    };
  }
}

message User {
  string email = 1;
  string name = 2;
}

message Echo {
  string message = 1;
}

message World {
  int32 id = 1;
  int32 random_number = 2;
}

message Queries {
  int32 queries = 1;
}

message Category {
  int64 id = 1;
  string name = 2;
}

message Tag {
  int64 id = 1;
  string name = 2;
}

enum Status {
  AVAILABLE = 0;
  PENDING = 1;
  SOLD = 2;
}

message Pet {
  int64 id = 1;
  Category category = 2;
  string name = 3 [(google.api.field_behavior) = REQUIRED];
  repeated string photo_urls = 4 [(google.api.field_behavior) = REQUIRED];
  repeated Tag tags = 5;
  Status status = 6;
}

message Pets {
  repeated Pet pets = 1;
}

message FindByStatus {
  repeated Status status = 1 [(google.api.field_behavior) = REQUIRED];
}

message FindByTag {
  repeated string tags = 1 [(google.api.field_behavior) = REQUIRED];
}
