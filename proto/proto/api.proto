syntax = "proto3";
package api;
option go_package = "petshop/petshop";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "messages.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Petshop API";
    version: "0.3.4";
    description: "";
  };
  host: "localhost:10000";
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "BasicAuth";
      value: {
        type: TYPE_BASIC;
      }
    }
    security: {
      key: "ApiKeyAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
      }
    }
  };
};

service Petshop {
  // HTTP body example
  rpc HttpBodyEx (google.protobuf.Empty) returns (google.api.HttpBody) {
    option (google.api.http) = {
      post: "/api.Petshop/HttpBodyEx"
      body: "*"
    };
  }

  // Schemaless JSON example
  rpc JsonEx (google.protobuf.Struct) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/api.Petshop/JsonEx"
      body: "*"
    };
  }

  // Authentication required example
  rpc AuthenticationRequiredEx (google.protobuf.Empty) returns (User) {
    option (google.api.http) = {
      post: "/api.Petshop/AuthenticationRequiredEx"
      body: "*"
    };
  }

  // Validation example
  rpc ValidationEx (User) returns (User) {
    option (google.api.http) = {
      post: "/api.Petshop/ValidationEx"
      body: "*"
    };
  }

  // CSRF example
  rpc CsrfEx (google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api.Petshop/CsrfEx"
      body: "*"
    };
  }

  // Server streaming example
  //
  // Bidirectional streaming is not supported in grpc-web
  rpc StreamingEx (Echo) returns (stream Echo) {
    option (google.api.http) = {
      post: "/api.Petshop/StreamingEx"
      body: "*"
    };
  }

  rpc PetPost (Pet) returns (Pet) {
    option (google.api.http) = {
      post: "/api.Petshop/PetPost"
      body: "*"
    };
  }

  rpc PetPut (Pet) returns (Pet) {
    option (google.api.http) = {
      post: "/api.Petshop/PetPut"
      body: "*"
    };
  };

  rpc PetFindByStatus (FindByStatus) returns (Pets) {
    option (google.api.http) = {
      post: "/api.Petshop/PetFindByStatus"
      body: "*"
    };
  }

  rpc PetFindByTag (FindByTag) returns (Pets) {
    option (google.api.http) = {
      post: "/api.Petshop/PetFindByTag"
      body: "*"
    };
  }
}

service Tfb {
  rpc TfbJson (google.protobuf.Empty) returns (Echo) {
    option (google.api.http) = {
      get: "/json"
    };
  }

  rpc TfbPlaintext (google.protobuf.Empty) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get: "/plaintext"
    };
  }

  rpc TfbDb (google.protobuf.Empty) returns (World) {
    option (google.api.http) = {
      get: "/db"
    };
  }

  rpc TfbQueries (Queries) returns (google.protobuf.ListValue) {
    option (google.api.http) = {
      get: "/queries/{queries}"
      additional_bindings {
        get: "/queries"
      }
    };
  }

  rpc TfbFortunes (google.protobuf.Empty) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get: "/fortunes"
    };
  }

  rpc TfbUpdates (Queries) returns (google.protobuf.ListValue) {
    option (google.api.http) = {
      get: "/updates/{queries}"
      additional_bindings {
        get: "/updates"
      }
    };
  }
}
